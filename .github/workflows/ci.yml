name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  actions: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.7

      - name: Validate Gradle wrapper
        if: ${{ hashFiles('gradlew') != '' }}
        uses: gradle/actions/wrapper-validation@v3

      - name: Run Gradle build
        env:
          GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs="-Xmx2g"'
        run: |
          if [ -x "./gradlew" ]; then
            ./gradlew clean build
          else
            gradle --no-daemon clean build
          fi

      - name: Publish JUnit test report
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: '**/build/test-results/test/*.xml'
          if-no-files-found: ignore

      - name: Publish HTML test report
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: junit-html-reports
          path: '**/build/reports/tests/test'
          if-no-files-found: ignore

  compose:
    name: Validate Compose manifest
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Lint docker compose file
        run: docker compose -f docker-compose.yml config
